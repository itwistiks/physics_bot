"""initial_migration

Revision ID: b404ced829e4
Revises: 
Create Date: 2025-07-28 13:24:09.534570

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b404ced829e4'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reward_points', sa.Integer(), nullable=True),
    sa.Column('condition', sa.Text(), nullable=True),
    sa.Column('icon', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reminders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('reminder_type', sa.Enum('INACTIVE', 'HOLIDAY', 'PROMO', name='remindertype'), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('title_ru', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('NO_SUB', 'SUB', 'PRO_SUB', 'TEACHER', 'MODERATOR', 'ADMIN', name='userstatus'), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('last_interaction_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subtopics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('title_ru', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_achievements',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('unlocked_at', sa.DateTime(), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'achievement_id')
    )
    op.create_table('user_progress',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('daily_record', sa.Integer(), nullable=True),
    sa.Column('weekly_points', sa.Integer(), nullable=True),
    sa.Column('total_points', sa.Integer(), nullable=True),
    sa.Column('current_streak', sa.Integer(), nullable=True),
    sa.Column('last_active_day', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('user_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('subtopics_stats', sa.JSON(), nullable=True),
    sa.Column('correct_answers', sa.Integer(), nullable=True),
    sa.Column('total_attempts', sa.Integer(), nullable=True),
    sa.Column('percentage', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('theories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('subtopic_id', sa.Integer(), nullable=True),
    sa.Column('complexity', sa.Enum('BASIC', 'ADVANCED', 'HIGH', name='complexity'), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('examples', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['subtopic_id'], ['subtopics.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_number', sa.Integer(), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('subtopic_id', sa.Integer(), nullable=True),
    sa.Column('part_number', sa.Enum('PART_ONE', 'PART_TWO', name='partnumber'), nullable=True),
    sa.Column('complexity', sa.Enum('BASIC', 'ADVANCED', 'HIGH', name='complexity'), nullable=True),
    sa.Column('task_content', sa.JSON(), nullable=True),
    sa.Column('correct_answer', sa.Text(), nullable=True),
    sa.Column('answer_options', sa.JSON(), nullable=True),
    sa.Column('theory_id', sa.Integer(), nullable=True),
    sa.Column('video_analysis_url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['subtopic_id'], ['subtopics.id'], ),
    sa.ForeignKeyConstraint(['theory_id'], ['theories.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tasks')
    op.drop_table('theories')
    op.drop_table('user_stats')
    op.drop_table('user_progress')
    op.drop_table('user_achievements')
    op.drop_table('subtopics')
    op.drop_table('users')
    op.drop_table('topics')
    op.drop_table('reminders')
    op.drop_table('achievements')
    # ### end Alembic commands ###
