from aiogram import Router, types, Bot
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from core.services.user_service import get_or_create_user
from config.database import AsyncSessionLocal
from core.keyboards.reply import main_menu_kb
from sqlalchemy import select
import logging

logger = logging.getLogger(__name__)


router = Router()


# @router.message(~Command(commands=["start", "help"]))
# async def handle_non_command(message: types.Message):
#     await message.answer(
#         "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –û–ì–≠ –ø–æ —Ñ–∏–∑–∏–∫–µ.\n"
#         "–ù–∞–∂–º–∏ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–ª–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.\n\n"
#         "–Ø –ø–æ–º–æ–≥—É:\n"
#         "‚úÖ –†–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤\n"
#         "‚úÖ –ò–∑—É—á–∞—Ç—å —Ç–µ–æ—Ä–∏—é\n"
#         "‚úÖ –°–ª–µ–¥–∏—Ç—å –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º\n"
#         "‚úÖ –ì–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —ç–∫–∑–∞–º–µ–Ω—É —Å–∏—Å—Ç–µ–º–Ω–æ"
#     )


@router.message(Command("start"))
async def cmd_start(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    menu_message_id = data.get('menu_message_id')
    task_message_id = data.get('task_message_id')

    if menu_message_id:
        try:
            await bot.delete_message(
                chat_id=message.chat.id,
                message_id=menu_message_id
            )
        except Exception as e:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –º–æ–≥–ª–æ –±—ã—Ç—å —É–∂–µ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
            logger.debug(f"–ù–µ—É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

    if task_message_id:
        try:
            await bot.delete_message(
                chat_id=message.chat.id,
                message_id=task_message_id
            )
        except Exception as e:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –º–æ–≥–ª–æ –±—ã—Ç—å —É–∂–µ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
            logger.debug(f"–ù–µ—É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await get_or_create_user(
            session=session,
            user_id=message.from_user.id,
            username=message.from_user.username
        )

    await message.answer(
        "üìö –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –û–ì–≠ –ø–æ —Ñ–∏–∑–∏–∫–µ –Ω–∞ 5! \n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ",
        reply_markup=main_menu_kb()
    )


# –î–æ–±–∞–≤—å—Ç–µ –≤ core/handlers/common.py
@router.message(Command("help"))
async def cmd_help(message: types.Message):
    help_text = """
üìö <b>–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É</b>:

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º

<b>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</b>:
‚úèÔ∏è –ü—Ä–∞–∫—Ç–∏–∫–∞ - –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Ç–µ–º–∞–º
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
üìñ –¢–µ–æ—Ä–∏—è - –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã

<b>–¢–∏–ø—ã –∑–∞–¥–∞–Ω–∏–π</b>:
üìã –ü–µ—Ä–≤–∞—è —á–∞—Å—Ç—å - –ó–∞–¥–∞–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–∞
üìò –í—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å - –ó–∞–¥–∞–Ω–∏—è —Å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–º –æ—Ç–≤–µ—Ç–æ–º
üî• –°–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ - –ó–∞–¥–∞–Ω–∏—è –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏

–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –¥–æ—Å—Ç—É–ø–Ω–∞ ‚úâÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞
"""
    await message.answer(help_text, parse_mode="HTML")
